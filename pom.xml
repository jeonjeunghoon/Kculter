<?xml version="1.0" encoding="UTF-8"?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.0</version>
        <relativePath/>
        <!-- lookup parent from repository -->
    </parent>
    <groupId>com.prac</groupId>
    <artifactId>react</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>react</name>
    <description>Demo project for Spring Boot</description>
    <properties>
        <java.version>11</java.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <!-- mysql과 연동하기 위해서 사용하는 라이브러리-->
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
        </dependency>
        <!-- mybatis를 사용하기 위해서 사용하는 라이브러리 -->
        <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
            <version>2.1.4</version>
        </dependency>
        <!--테스트 코드 작성을 위한 라이브러리-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.vaadin.external.google</groupId>
                    <artifactId>android-json</artifactId>
                </exclusion>
            </exclusions>            
        </dependency>
        <!--AWS S3에 파일을 저장하기 위한 라이브러리 시작 -->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-aws</artifactId>
            <version>2.0.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-aws-context</artifactId>
            <version>1.2.1.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-aws-autoconfigure</artifactId>
            <version>1.2.1.RELEASE</version>
        </dependency>
        <!--AWS S3에 파일을 저장하기 위한 라이브러리 끝 -->    
        <!--AWS S3 테스트 코드 작성을 위한 라이브러리-->
        <dependency>
            <groupId>io.findify</groupId>
            <artifactId>s3mock_2.12</artifactId>
            <version>0.2.4</version>
            <scope>test</scope>
        </dependency>
        <!-- jaxb-api -->
        <dependency>
            <groupId>javax.xml.bind</groupId>
            <artifactId>jaxb-api</artifactId>
            <version>2.3.0</version>
        </dependency>
		<!-- json object 읽어들이기 위해서 -->
        <dependency>
            <groupId>org.json</groupId>
            <artifactId>json</artifactId>
            <version>20220320</version>
        </dependency>
        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>1.1.1</version>
        </dependency>
        <!-- sha 256을 사용하기 위한 dependency -->
		<dependency>
		    <groupId>commons-codec</groupId>
		    <artifactId>commons-codec</artifactId>
		    <version>1.10</version>
		</dependency>   
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>com.github.eirslett</groupId>
                <artifactId>frontend-maven-plugin</artifactId>
                <version>1.11.0</version>
                <!-- frontend-maven-plugin Version -->
                <configuration>
                    <workingDirectory>frontend/kculterfe</workingDirectory>
                    <!-- React JS 가 설치된 디렉토리 -->
                    <installDirectory>target</installDirectory>
                    <!-- war & jar 가 생성되는 메이븐 빌드의 타겟 디렉토리 -->
                </configuration>
                <executions>
                    <execution>
                        <id>install node and npm</id>
                        <goals>
                            <goal>install-node-and-npm</goal>
                            <!-- node & npm 설치 -->
                        </goals>
                        <configuration>
                            <nodeVersion>v15.14.0</nodeVersion>
                            <!-- 설치할 nodeJs 의 버전 -->
                            <npmVersion>7.7.6</npmVersion>
                            <!-- 설치할 npm 의 버전 -->
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm install</id>
                        <!-- npm install 로 package.json 의 모듈을 설치한다. -->
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>install</arguments>
                        </configuration>
                    </execution>
                    <execution>
                        <id>npm run build</id>
                        <!-- React Js Build -->
                        <goals>
                            <goal>npm</goal>
                        </goals>
                        <configuration>
                            <arguments>run build</arguments>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>generate-resources</phase>
                        <!-- 리소스 생성 -->
                        <configuration>
                            <target>
                                <copy todir="${project.build.directory}/classes/public">
                                    <!-- 복사할 디렉토리 설정 -->
                                    <fileset dir="${project.basedir}/frontend/kculterfe/build"/>
                                    <!-- 가져올 디렉토리 및 파일 -->
                                </copy>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                            <!-- 복사 실행 -->
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>     
    </build>

</project>